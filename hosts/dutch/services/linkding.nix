# Auto-generated using compose2nix v0.3.2.
{ pkgs, lib, config, ... }:

{
  # Runtime
  virtualisation.podman = {
    enable = true;
    autoPrune.enable = true;
    dockerCompat = true;
  };

  # Enable container name DNS for all Podman networks.
  networking.firewall.interfaces =
    let
      matchAll = if !config.networking.nftables.enable then "podman+" else "podman*";
    in
    {
      "${matchAll}".allowedUDPPorts = [ 53 ];
    };

  virtualisation.oci-containers.backend = "podman";

  # Containers
  virtualisation.oci-containers.containers."linkding" = {
    image = "sissbruecker/linkding:latest";
    volumes = [
      "linkding_linkding-data:/etc/linkding/data:rw"
    ];
    ports = [
      "127.0.0.1:9090:9090/tcp"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=linkding"
      "--network=linkding_default"
    ];
  };
  systemd.services."podman-linkding" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
    };
    after = [
      "podman-network-linkding_default.service"
      "podman-volume-linkding_linkding-data.service"
    ];
    requires = [
      "podman-network-linkding_default.service"
      "podman-volume-linkding_linkding-data.service"
    ];
    partOf = [
      "podman-compose-linkding-root.target"
    ];
    wantedBy = [
      "podman-compose-linkding-root.target"
    ];
  };

  # Networks
  systemd.services."podman-network-linkding_default" = {
    path = [ pkgs.podman ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "podman network rm -f linkding_default";
    };
    script = ''
      podman network inspect linkding_default || podman network create linkding_default
    '';
    partOf = [ "podman-compose-linkding-root.target" ];
    wantedBy = [ "podman-compose-linkding-root.target" ];
  };

  # Volumes
  systemd.services."podman-volume-linkding_linkding-data" = {
    path = [ pkgs.podman ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
    };
    script = ''
      podman volume inspect linkding_linkding-data || podman volume create linkding_linkding-data
    '';
    partOf = [ "podman-compose-linkding-root.target" ];
    wantedBy = [ "podman-compose-linkding-root.target" ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."podman-compose-linkding-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };

  services.caddy.virtualHosts."linkding.macks.cloud".extraConfig = ''
    reverse_proxy http://localhost:9090
  '';
}
