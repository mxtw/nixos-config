# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/c9175edd-7b95-4f01-aa74-39fdfa994a1e";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/CD98-B284";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  fileSystems."/media/data" =
    {
      #/dev/sda1: UUID="2023f9ee-527c-4b6f-8721-53519d0417f8" UUID_SUB="f09a31f1-e218-4b13-b505-de99d0001072" BLOCK_SIZE="4096" TYPE="btrfs" PARTUUID="b601b82a-32f2-468e-9e1b-0829106483e4"
      device = "/dev/disk/by-uuid/2023f9ee-527c-4b6f-8721-53519d0417f8";
      fsType = "btrfs";
    };

  fileSystems."/home/max/Pictures" = {
    depends = [ "/media/data" ];
    device = "/media/data/max/Pictures";
    fsType = "none";
    options = [ "bind" ];
  };
  fileSystems."/home/max/Downloads" = {
    depends = [ "/media/data" ];
    device = "/media/data/max/Downloads";
    fsType = "none";
    options = [ "bind" ];
  };
  fileSystems."/home/max/Videos" = {
    depends = [ "/media/data" ];
    device = "/media/data/max/Videos";
    fsType = "none";
    options = [ "bind" ];
  };
  fileSystems."/home/max/Music" = {
    depends = [ "/media/data" ];
    device = "/media/data/max/Music";
    fsType = "none";
    options = [ "bind" ];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp14s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp15s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
