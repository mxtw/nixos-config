bind-key r source-file ~/.config/tmux/tmux.conf


bind-key c copy-mode
bind-key -T copy-mode-vi 'v' send -X begin-selection     # Begin selection in copy mode.
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle  # Begin selection in copy mode.
bind-key -T copy-mode-vi 'y' send -X copy-selection      # Yank selection in copy mode.
bind-key -T copy-mode-vi Escape send -X cancel

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind-key -n 'M-Left' if-shell "$is_vim" 'send-keys M-Left' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'M-Down' if-shell "$is_vim" 'send-keys M-Down' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'M-Up' if-shell "$is_vim" 'send-keys M-Up' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'M-Right' if-shell "$is_vim" 'send-keys M-Right' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'M-Left' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'M-Down' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'M-Up' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'M-Right' if -F '#{pane_at_right}' '' 'select-pane -R'

bind-key -n S-Left previous-window
bind-key -n S-Right next-window

bind-key -n M-. switch-client -n
bind-key -n M-, switch-client -p

bind-key -n M-1 selectw -t 1
bind-key -n M-2 selectw -t 2
bind-key -n M-3 selectw -t 3
bind-key -n M-4 selectw -t 4
bind-key -n M-5 selectw -t 5
bind-key -n M-6 selectw -t 6
bind-key -n M-7 selectw -t 7
bind-key -n M-8 selectw -t 8
bind-key -n M-9 selectw -t 9

bind-key v splitw -h -l 50% -c "#{pane_current_path}"
bind-key h splitw -v -l 50% -c "#{pane_current_path}"
bind-key t new-window -c "#{pane_current_path}"

bind-key m run-shell "sesh connect $(
   sesh list -tz | fzf-tmux -p 55%,60% \
       --no-sort --border-label ' sesh ' --prompt '‚ö°  ' \
       --header '  ^a all ^t tmux ^x zoxide ^f find ^d kill' \
       --bind 'tab:down,btab:up' \
       --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list)' \
       --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)' \
       --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
       --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 1 -t d -E .Trash . ~/code)'
       --bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list)' # TODO fix this
)"
bind-key M new-session -c "~"

# allow image passthrough
set -g allow-passthrough on

set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# bar
set -g status-position top
set -g status-style "fg=#b4befe,bg=default"

set -g status-right "#{?client_prefix,#[fg=#eba0ac] p ,}#[fg=#89b4fa]#(kubectl config current-context) #[fg=#b4befe]#{session_name}"
set -g status-left ""

set -g status-right-length "100"
set -g status-left-length "100"

setw -g window-status-format "#[nobold,fg=#b4befe]#I:#W#F"
setw -g window-status-current-format "#[bold,fg=#89b4fa]#I:#W#F"
setw -g window-status-separator " "

# pane colors
set -g pane-active-border-style "fg=#b4befe"
set -g pane-border-style "fg=#6c7086"

# pane indices
setw -g pane-base-index 1
set -g renumber-windows on

# set -g default-terminal "tmux-256color"
# set -ag terminal-overrides ",xterm-256color:RGB"
set -ag terminal-overrides ",foot:Tc"

# misc
set -g detach-on-destroy off
